plugins {
	id 'fabric-loom' version '1.8-SNAPSHOT'
	id 'maven-publish'
	id 'eclipse'
	id 'idea'
}

version = project.mod_version
group = project.maven_group

def versionPropsFile = file('version.properties')
def Properties versionProps = new Properties()
def major = 1
def minor = 0
def build = 0

if (versionPropsFile.canRead()) {
	versionProps.load(new FileInputStream(versionPropsFile))

	major = versionProps['VERSION_MAJOR'].toInteger()
	minor = versionProps['VERSION_MINOR'].toInteger()
	build = versionProps['VERSION_BUILD'].toInteger()
}

build += 1

if (versionPropsFile.canWrite()) {
	versionProps['VERSION_MAJOR'] = major.toString()
	versionProps['VERSION_MINOR'] = minor.toString()
	versionProps['VERSION_BUILD'] = build.toString()
	versionProps.store(versionPropsFile.newWriter(), null)
}

version = "${major}.${minor}.${build}"

base {
	archivesName = project.archives_base_name
}

repositories {
    maven { url "https://maven.fabricmc.net/" }
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/releases/" }
}

loom {
	accessWidenerPath = file("src/main/resources/justmap.accesswidener")
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
	modImplementation ("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}") {
		exclude (group: "net.fabricmc.fabric-api")
	}

	include ("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}") {
		exclude (group: "net.fabricmc.fabric-api")
	}
}

processResources {
	inputs.property "version", project.version
	duplicatesStrategy = 'WARN'

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

assemble {
	version += "-${project.minecraft_version}-release"
}
